program to accept user input regd his id, name, and location as well as manager role which has extra field called dept

EMPLOYEE.CS
using System;

namespace EmployeeManagement
{
    public class Employee
    {
        
        private int empId;
        private string empName;
        private string empLocation;

        // Properties
        public int EmpId
        {
            get { return empId; }
            set { empId = value; }
        }

        public string EmpName
        {
            get { return empName; }
            set { empName = value; }
        }

        public string EmpLocation
        {
            get { return empLocation; }
            set { empLocation = value; }
        }

        // Constructor
        public Employee(int id, string name, string location)
        {
            EmpId = id;
            EmpName = name;
            EmpLocation = location;
        }

        // Virtual method for Polymorphism
        public virtual void DisplayDetails()
        {
            Console.WriteLine($"ID: {EmpId}, Name: {EmpName}, Location: {EmpLocation}");
        }
    }
}


MANAGER.CS

using System;

namespace EmployeeManagement
{
    public class Manager : Employee
    {
        // Additional property for Manager
        public string Department { get; set; }

        // Constructor
        public Manager(int id, string name, string location, string department)
            : base(id, name, location)
        {
            Department = department;
        }

        // Overriding method for Polymorphism
        public override void DisplayDetails()
        {
            base.DisplayDetails();
            Console.WriteLine($"Department: {Department}");
        }
    }
}

EMPLOYEECOLLECTION.CS

using System;
using System.Collections.Generic;

namespace EmployeeManagement
{
    public class EmployeeCollection
    {
        // Abstraction - Using List to store Employee objects
        private List<Employee> employees = new List<Employee>();

        // Method to add employee to the collection
        public void AddEmployee(Employee emp)
        {
            employees.Add(emp);
        }

        // Method to get all employees
        public List<Employee> GetAllEmployees()
        {
            return employees;
        }
    }
}

PROGRAM.CS

using System;

namespace EmployeeManagement
{
    class Program
    {
        static void Main(string[] args)
        {
            EmployeeCollection empCollection = new EmployeeCollection();
            
            while (true)
            {
                Console.WriteLine("Enter Employee ID: ");
                int id = Convert.ToInt32(Console.ReadLine());

                Console.WriteLine("Enter Employee Name: ");
                string name = Console.ReadLine();

                Console.WriteLine("Enter Employee Location: ");
                string location = Console.ReadLine();

                Console.WriteLine("Is the employee a manager? (yes/no): ");
                string isManager = Console.ReadLine().ToLower();

                if (isManager == "yes")
                {
                    Console.WriteLine("Enter Department: ");
                    string department = Console.ReadLine();
                    Manager manager = new Manager(id, name, location, department);
                    empCollection.AddEmployee(manager);
                }
                else
                {
                    Employee employee = new Employee(id, name, location);
                    empCollection.AddEmployee(employee);
                }

                Console.WriteLine("Do you want to add another employee? (yes/no): ");
                string continueInput = Console.ReadLine().ToLower();
                if (continueInput != "yes")
                {
                    break;
                }
            }

            Console.WriteLine("\nEmployee Details:");
            foreach (var emp in empCollection.GetAllEmployees())
            {
                emp.DisplayDetails();
                Console.WriteLine();
            }
        }
    }
}

